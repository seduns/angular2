version: '3.7'

services:
  todoapp-web:
    image: mycompanyname/todoapp-web:latest
    container_name: todoapp-web
    build:
      context: ../../../
      dockerfile: angular/Dockerfile.local      
    ports:
      - "4200:80"
    depends_on:
      - todoapp-api
    volumes:
      - ./dynamic-env.json://usr/share/nginx/html/dynamic-env.json
    networks:
      - abp-network  

  todoapp-api:
    image: mycompanyname/todoapp-api:latest
    container_name: todoapp-api-container
    build:
      context: ../../
      dockerfile: TodoApp/Dockerfile.local
    environment:
      - ASPNETCORE_URLS=https://+:443;http://+:80;
      - Kestrel__Certificates__Default__Path=/root/certificate/localhost.pfx
      - Kestrel__Certificates__Default__Password=91f91912-5ab0-49df-8166-23377efaf3cc
      - App__SelfUrl=https://localhost:44324
      - AuthServer__Authority=http://todoapp-api
      - AuthServer__RequireHttpsMetadata=false
      - AuthServer__SetSelfAsIssuer=true      
      - Redis__Configuration=redis
    ports:
      - "44324:443"
    depends_on:
      redis:
        condition: service_healthy  
    restart: on-failure    
    volumes:
      - ./certs:/root/certificate
    networks:
      - abp-network  
  
  db-migrator:
    image: mycompanyname/todoapp-api:latest
    container_name: db-migrator
    build:
      context: ../../
      dockerfile: TodoApp/Dockerfile.local
    environment:
    command:
      - --migrate-database
    depends_on:
    networks:
      - abp-network    

  redis:
    container_name: redis
    image: redis:7.2.2-alpine
    ports:
      - "6379:6379"
    networks:
      - abp-network  
    healthcheck:
      test: ["CMD", "redis-cli","ping"]      

volumes:

networks:
  abp-network:
    name: todoapp-network
    driver: bridge